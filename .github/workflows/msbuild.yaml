name: MSBuild

on: 
  push:
  release:
    types: [created]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitCommitId: af2287382b1991dbdcb7e5112d236f3323b9dd7a
      
    - name: Setup vcpkg
      run: |
        ${{ github.workspace }}/vcpkg/vcpkg.exe integrate install

    - name: Get CI version
      if: github.event_name != 'release'
      id: ci-version
      shell: bash
      run: |
        echo ::set-output name=TAG::$(git describe --tags --no-abbrev)
        
    - name: Update CI version
      if: github.event_name != 'release'
      run: python workflow/stamp-version.py "${{steps.ci-version.outputs.TAG}}" "${{github.run_number}}" "${{github.sha}}"

    - name: Get release version
      if: github.event_name == 'release'
      id: release-version
      shell: bash
      run: |
        sanitised_tag=${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=TAG::${sanitised_tag//./,}

    - name: Update release version
      if: github.event_name == 'release'
      run: python workflow/stamp-version.py "${{steps.release-version.outputs.TAG}}" "${{github.run_number}}" "${{github.sha}}"
    
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Archive files
      uses: actions/upload-artifact@v3
      with:
        name: d3d9_arcdps_squad_ready
        path: |
          x64/${{ env.BUILD_CONFIGURATION }}/d3d9_arcdps_squad_ready.dll
          x64/${{ env.BUILD_CONFIGURATION }}/d3d9_arcdps_squad_ready.pdb

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: x64/${{ env.BUILD_CONFIGURATION }}/d3d9_arcdps_squad_ready.dll
